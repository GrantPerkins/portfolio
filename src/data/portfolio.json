[
  {
    "name": "Axon",
    "link": "https://docs.wpilib.org/en/latest/docs/software/wpilib-tools/axon/introduction.html",
    "image": "hatchcover.png",
    "description": "Axon is a TensorFlow-backed web app for retraining COCO trained Mobilenets for use in the FIRST Robotics Competition. Axon provides a friendly interface for creating datasets, training models with live metrics, and inferencing TFLite models. There is a Docker backend written in Docker, which runs various TensorFlow 1.12 processes. To trigger the Docker containers to run, there is a TypeScript server. Finally, a React frontend written in TypeScript communicates to the server using GraphQL.",
    "technologies": [
      "Python",
      "TensorFlow",
      "OpenCV",
      "Docker",
      "TypeScript",
      "GraphQL",
      "React"
    ]
  },
  {
    "name": "CS 4513 Final Project",
    "link": "https://raw.githubusercontent.com/GrantPerkins/portfolio/master/src/data/mnist.ipynb",
    "image": "mnist.png",
    "description": "For my final project of WPI's CS 4513 class, I developed a distributed machine learning solution with TensorFlow and AWS SageMaker. The MNIST dataset is split between all of the worker computers. A custom Python program was run across these workers. Each worker had a different \"rank\", and this rank was used to determine which slice of the dataset the worker should use. The lead worker printed metrics every 50 epochs. My Python script trained a custom convolutional neural network, calculating loss using cross entropy across all workers. The master then utilized an Adam Optimizer.",
    "technologies": [
      "Python",
      "TensorFlow",
      "AWS Lambda",
      "AWS S3"
    ]
  },
  {
    "name": "Accurate Centroid-Determining Human Body Detection",
    "link": "https://drive.google.com/file/d/1XcTCKMBJ2OyixukSnBX50-Wzj0SVDF7a/view?usp=sharing",
    "image": "centroid.png",
    "description": "Accurate Centroid-Determining Human Body Detection is a project I developed for the Massachusetts State Science Fair. I developed a triple neural network system for detecting the centroid of human body in depth images. I used a sparse auto-encoder, a convolutional neural network, sliding window localization, and a Haar cascade classifier to accomplish this task.",
    "technologies": [
      "Python",
      "TensorFlow",
      "MatPlotLib",
      "OpenCV"
    ]
  }
]
